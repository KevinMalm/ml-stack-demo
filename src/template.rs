pub const MAIN_TEST_PY_FILE_NAME: &str = "main.test.py";
pub const MAIN_TEST_PY: &str = "def main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n";
pub const RUN_EXPERIMENT_DOCKERFILE_FILE_NAME: &str = "run.experiment.Dockerfile";
pub const RUN_EXPERIMENT_DOCKERFILE: &str = "# syntax=docker/dockerfile:1\n\n# BASE PACKAGE\nFROM python:3.12-slim\n\n# ARGUMENTS\nARG MODEL_REPO\nARG MODEL_NAME\nARG MODEL_TAGS\nARG MLFLOW_HOST\nARG MLFLOW_PORT\nARG GITHUB_LIB_BRANCH\nARG GITHUB_LIB_REPO\nARG SERVER_URL\n\n# Expose the Port\nEXPOSE $MLFLOW_PORT\nEXPOSE 3000\n\n# INSTALL DEPENDENCIES\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    git \\\n    python3-pip \\\n    && rm -rf /var/lib/apt/lists/*\n\n# SET CONTEXT VARIABLES\nENV VIRTUAL_ENV=/opt/venv\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\n# ACTIVATE PYTHON ENV\nRUN python -m venv $VIRTUAL_ENV\n\n# MAKE ROOT DIRECTORY\nRUN mkdir -p /app\n\n# SET WORKING DIRECTORY\nWORKDIR /app\n\n# INSTALL THE ML-STACK HELPER LIBRARY\nRUN pip install --upgrade pip setuptools wheel build\n\nRUN git clone --branch ${GITHUB_LIB_BRANCH} ${GITHUB_LIB_REPO} /tmp/github-lib && \\\n    cd /tmp/github-lib && \\\n    python -m build && \\\n    pip install dist/*.whl\n\n\n# PULL MODEL REPO\nRUN git clone --branch ${MODEL_NAME} ${MODEL_REPO} /app\n# INSTALL ALL REQUIREMENTS\nRUN pip install -r requirements.txt\n\n# SET ENVIRONMENT VARIABLES\nENV MLFLOW_EXPERIMENT_TAGS=${MODEL_TAGS}\nENV SERVER_URL=${SERVER_URL}\nENV MLFLOW_URL=\"http://${MLFLOW_HOST}:${MLFLOW_PORT}\"\n\n# Set MLFLOW_EXPERIMENT_NAME using MODEL_NAME and git short hash\nRUN GIT_HASH=$(git -C /app rev-parse --short HEAD) && \\\n    echo \"export MLFLOW_EXPERIMENT_NAME=${MODEL_NAME}-$GIT_HASH\" >> /etc/profile.d/mlflow_env.sh\n\nCMD [ \"/bin/sh\", \"-c\", \". /etc/profile.d/mlflow_env.sh && python src/__main__.py\"]\n";
pub const MAIN_TRAIN_PY_FILE_NAME: &str = "main.train.py";
pub const MAIN_TRAIN_PY: &str = "def main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()\n";
pub const MAIN_INVOKE_PY_FILE_NAME: &str = "main.invoke.py";
pub const MAIN_INVOKE_PY: &str = "\n";
pub const ENV_SH_FILE_NAME: &str = "env.sh";
pub const ENV_SH: &str = "export STACK_PROJECT=\"<<PROJECT-NAME>>\"\nexport STACK_HOME=\"$(pwd)\"";
pub const REPO_MODEL_MAIN_PY_FILE_NAME: &str = "repo_model_main.py";
pub const REPO_MODEL_MAIN_PY: &str = "import os\nimport json\nimport mlflow\nimport ml_stack\n\n\ndef main():\n    ml_stack.configure()\n\n    with mlflow.start_run():\n        pass\n\n\ndef mlflow_configure():\n    # Load Env Vars\n    _experiment = os.getenv(\"MLFLOW_EXPERIMENT_NAME\")\n    _tags = os.getenv(\"MLFLOW_EXPERIMENT_TAGS\")\n    # Validate\n    if _experiment is None or _tags is None:\n        raise Exception(\"Environment has not been setup correctly.\")\n    # Parse the ML Flow TAGs\n    tags = json.loads(_tags.replace(\"\\\\\", \"\"))\n\n    # Set the Experiment name\n    mlflow.set_experiment(_experiment)\n    # Set the Experiment tags\n    for x in tags:\n        mlflow.set_tag(x[\"key\"], x[\"value\"])\n\n\nif __name__ == \"__main__\":\n    main()\n";
pub const REPO_MODEL_REQUIREMENTS_TXT_FILE_NAME: &str = "repo.model.requirements.txt";
pub const REPO_MODEL_REQUIREMENTS_TXT: &str = "mlflow";
